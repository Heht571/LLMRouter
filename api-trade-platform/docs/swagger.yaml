basePath: /api/v1
definitions:
  model.APICallDetail:
    properties:
      api_service_id:
        type: integer
      api_service_name:
        type: string
      calls:
        type: integer
      cost:
        type: number
      total_tokens:
        type: integer
    type: object
  model.APIDocumentation:
    properties:
      content:
        description: Markdown内容
        type: string
      created_at:
        type: string
      description:
        type: string
      doc_id:
        type: integer
      is_published:
        type: boolean
      service_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      version:
        type: string
    type: object
  model.APIDocumentationResponse:
    properties:
      content:
        type: string
      created_at:
        type: string
      description:
        type: string
      doc_id:
        type: integer
      endpoints:
        items:
          $ref: '#/definitions/model.APIEndpoint'
        type: array
      is_published:
        type: boolean
      service_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      version:
        type: string
    type: object
  model.APIEndpoint:
    properties:
      created_at:
        type: string
      description:
        type: string
      doc_id:
        type: integer
      endpoint_id:
        type: integer
      examples:
        additionalProperties: true
        type: object
      is_deprecated:
        type: boolean
      method:
        type: string
      parameters:
        items:
          $ref: '#/definitions/model.APIParameter'
        type: array
      path:
        type: string
      request_body_schema:
        additionalProperties: true
        type: object
      response_schema:
        additionalProperties: true
        type: object
      summary:
        type: string
      tags:
        items:
          type: string
        type: array
      updated_at:
        type: string
    type: object
  model.APIParameter:
    properties:
      default: {}
      description:
        type: string
      example: {}
      in:
        description: query, header, path, body
        type: string
      name:
        type: string
      required:
        type: boolean
      type:
        type: string
    type: object
  model.APIServiceDetailResponse:
    properties:
      category:
        description: API市场扩展字段
        type: string
      description:
        type: string
      documentation:
        type: string
      features:
        description: 解析后的特性数组
        items:
          type: string
        type: array
      is_active:
        type: boolean
      is_subscribed:
        description: 当前买家是否已订阅
        type: boolean
      name:
        type: string
      platform_api_key:
        description: 如果已订阅，返回平台密钥
        type: string
      platform_proxy_prefix:
        type: string
      price_per_call:
        type: number
      price_per_token:
        type: number
      pricing_model:
        type: string
      rating:
        type: number
      review_count:
        type: integer
      seller_username:
        description: 用于买家列表展示
        type: string
      service_id:
        type: integer
      subscriber_count:
        type: integer
      subscription_date:
        description: 订阅日期
        type: string
      total_calls:
        type: integer
    type: object
  model.APIServiceResponse:
    properties:
      category:
        description: API市场扩展字段
        type: string
      description:
        type: string
      documentation:
        type: string
      features:
        description: 解析后的特性数组
        items:
          type: string
        type: array
      is_active:
        type: boolean
      name:
        type: string
      platform_proxy_prefix:
        type: string
      price_per_call:
        type: number
      price_per_token:
        type: number
      pricing_model:
        type: string
      rating:
        type: number
      review_count:
        type: integer
      seller_username:
        description: 用于买家列表展示
        type: string
      service_id:
        type: integer
      subscriber_count:
        type: integer
      total_calls:
        type: integer
    type: object
  model.ChangePasswordRequest:
    properties:
      confirm_password:
        type: string
      current_password:
        type: string
      new_password:
        maxLength: 100
        minLength: 8
        type: string
    required:
    - confirm_password
    - current_password
    - new_password
    type: object
  model.CreateAPIDocumentationRequest:
    properties:
      content:
        type: string
      description:
        type: string
      is_published:
        type: boolean
      title:
        maxLength: 255
        type: string
      version:
        type: string
    required:
    - content
    - title
    type: object
  model.CreateAPIEndpointRequest:
    properties:
      description:
        type: string
      examples:
        additionalProperties: true
        type: object
      is_deprecated:
        type: boolean
      method:
        enum:
        - GET
        - POST
        - PUT
        - DELETE
        - PATCH
        - HEAD
        - OPTIONS
        type: string
      parameters:
        items:
          $ref: '#/definitions/model.APIParameter'
        type: array
      path:
        maxLength: 500
        type: string
      request_body_schema:
        additionalProperties: true
        type: object
      response_schema:
        additionalProperties: true
        type: object
      summary:
        type: string
      tags:
        items:
          type: string
        type: array
    required:
    - method
    - path
    type: object
  model.ErrorResponse:
    description: 标准错误响应格式
    properties:
      code:
        example: 400
        type: integer
      details:
        example: Field 'username' is required
        type: string
      message:
        example: Invalid request parameters
        type: string
    type: object
  model.RegisterAPIServiceRequest:
    description: 卖家注册新API服务的请求参数
    properties:
      description:
        example: 提供全球天气数据查询服务
        type: string
      name:
        example: Weather API
        maxLength: 255
        type: string
      original_api_key:
        example: sk-1234567890abcdef
        type: string
      original_endpoint_url:
        example: https://api.weather.com/v1
        type: string
    required:
    - name
    - original_api_key
    - original_endpoint_url
    type: object
  model.UpdateAPIDocumentationRequest:
    properties:
      content:
        type: string
      description:
        type: string
      is_published:
        type: boolean
      title:
        maxLength: 255
        type: string
      version:
        type: string
    required:
    - content
    - title
    type: object
  model.UpdateAPIEndpointRequest:
    properties:
      description:
        type: string
      examples:
        additionalProperties: true
        type: object
      is_deprecated:
        type: boolean
      method:
        enum:
        - GET
        - POST
        - PUT
        - DELETE
        - PATCH
        - HEAD
        - OPTIONS
        type: string
      parameters:
        items:
          $ref: '#/definitions/model.APIParameter'
        type: array
      path:
        maxLength: 500
        type: string
      request_body_schema:
        additionalProperties: true
        type: object
      response_schema:
        additionalProperties: true
        type: object
      summary:
        type: string
      tags:
        items:
          type: string
        type: array
    required:
    - method
    - path
    type: object
  model.UpdateAPIPricingRequest:
    description: 卖家更新API服务定价策略的请求参数
    properties:
      price_per_call:
        example: 0.01
        type: number
      price_per_token:
        example: 0.001
        type: number
      pricing_model:
        enum:
        - per_call
        - per_token
        example: per_call
        type: string
    required:
    - pricing_model
    type: object
  model.UpdateUserProfileRequest:
    properties:
      avatar_url:
        type: string
      bio:
        maxLength: 500
        type: string
      company:
        maxLength: 100
        type: string
      display_name:
        maxLength: 100
        type: string
      location:
        maxLength: 100
        type: string
      phone_number:
        maxLength: 20
        type: string
      timezone:
        maxLength: 50
        type: string
      website:
        type: string
    type: object
  model.UpdateUserSecurityRequest:
    properties:
      allowed_ip_ranges:
        type: string
      login_notifications:
        type: boolean
      password_expiry_days:
        type: integer
      session_timeout:
        type: integer
      two_factor_enabled:
        type: boolean
    type: object
  model.UpdateUserSettingsRequest:
    properties:
      api_usage_alerts:
        type: boolean
      currency:
        maxLength: 10
        type: string
      date_format:
        maxLength: 20
        type: string
      email_notifications:
        type: boolean
      language:
        maxLength: 10
        type: string
      marketing_emails:
        type: boolean
      security_alerts:
        type: boolean
      sms_notifications:
        type: boolean
      theme:
        enum:
        - light
        - dark
        - auto
        type: string
    type: object
  model.UsageSummaryResponse:
    properties:
      calls_made:
        type: integer
      indicative_cost:
        description: 基于实际token使用的费用
        type: number
      period:
        description: e.g., "monthly", "daily"
        type: string
      total_tokens:
        type: integer
      usage_details_by_api:
        items:
          $ref: '#/definitions/model.APICallDetail'
        type: array
    type: object
  model.UserAccountResponse:
    properties:
      profile:
        $ref: '#/definitions/model.UserProfile'
      security:
        $ref: '#/definitions/model.UserSecurity'
      settings:
        $ref: '#/definitions/model.UserSettings'
      user:
        $ref: '#/definitions/model.UserResponse'
    type: object
  model.UserLoginRequest:
    description: 用户登录请求参数
    properties:
      password:
        example: SecurePass123!
        type: string
      username:
        example: john_doe
        type: string
    required:
    - password
    - username
    type: object
  model.UserLoginResponse:
    description: 用户登录成功响应
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  model.UserProfile:
    properties:
      avatar_url:
        description: 头像URL
        type: string
      bio:
        description: 个人简介
        type: string
      company:
        description: 公司名称
        type: string
      created_at:
        type: string
      display_name:
        description: 显示名称
        type: string
      location:
        description: 所在地区
        type: string
      phone_number:
        description: 电话号码
        type: string
      profile_id:
        type: integer
      timezone:
        description: 时区
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      website:
        description: 个人网站
        type: string
    type: object
  model.UserRegistrationRequest:
    description: 用户注册请求参数
    properties:
      email:
        example: john@example.com
        type: string
      password:
        example: SecurePass123!
        maxLength: 100
        minLength: 8
        type: string
      role:
        enum:
        - seller
        - buyer
        example: seller
        type: string
      username:
        example: john_doe
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - role
    - username
    type: object
  model.UserResponse:
    description: 用户基础信息响应
    properties:
      email:
        example: john@example.com
        type: string
      role:
        enum:
        - seller
        - buyer
        example: seller
        type: string
      user_id:
        example: 1
        type: integer
      username:
        example: john_doe
        type: string
    type: object
  model.UserSecurity:
    properties:
      allowed_ip_ranges:
        description: 允许的IP范围，JSON数组字符串
        type: string
      created_at:
        type: string
      last_password_change:
        description: 最后修改密码时间
        type: string
      login_notifications:
        description: 登录通知开关
        type: boolean
      password_expiry_days:
        description: 密码过期天数，0表示不过期
        type: integer
      security_id:
        type: integer
      session_timeout:
        description: 会话超时时间(分钟)
        type: integer
      two_factor_enabled:
        description: 两步验证开关
        type: boolean
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  model.UserSettings:
    properties:
      api_usage_alerts:
        description: API使用量警告
        type: boolean
      created_at:
        type: string
      currency:
        description: 货币偏好，默认"USD"
        type: string
      date_format:
        description: 日期格式偏好
        type: string
      email_notifications:
        description: 邮件通知开关
        type: boolean
      language:
        description: 语言偏好，默认"zh-CN"
        type: string
      marketing_emails:
        description: 营销邮件开关
        type: boolean
      security_alerts:
        description: 安全警告
        type: boolean
      settings_id:
        type: integer
      sms_notifications:
        description: 短信通知开关
        type: boolean
      theme:
        description: 主题偏好："light", "dark", "auto"
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@api-platform.example.com
    name: API 平台技术支持
    url: https://api-platform.example.com/support
  description: |-
    这是一个完整的 API 交易平台后端服务，提供 API 服务的注册、管理、交易和代理功能。
    平台支持卖家注册和管理 API 服务，买家可以浏览、订阅和使用 API 服务。
    所有 API 调用都通过平台代理，确保安全性和使用统计。
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  termsOfService: https://api-platform.example.com/terms
  title: API 交易平台 MVP
  version: "1.0"
paths:
  /api/v1/auth/account:
    get:
      consumes:
      - application/json
      description: 获取当前用户的完整账户信息，包括个人资料、设置和安全信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserAccountResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 获取完整用户账户信息
      tags:
      - Account
  /api/v1/auth/change-password:
    post:
      consumes:
      - application/json
      description: 修改当前用户的登录密码
      parameters:
      - description: 密码修改信息
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/model.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 修改密码
      tags:
      - Account
  /api/v1/auth/profile:
    get:
      consumes:
      - application/json
      description: 获取当前用户的个人资料信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserProfile'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 获取用户个人资料
      tags:
      - Account
    put:
      consumes:
      - application/json
      description: 更新当前用户的个人资料信息
      parameters:
      - description: 个人资料信息
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUserProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 更新用户个人资料
      tags:
      - Account
  /api/v1/auth/security:
    get:
      consumes:
      - application/json
      description: 获取当前用户的安全设置信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserSecurity'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 获取用户安全设置
      tags:
      - Account
    put:
      consumes:
      - application/json
      description: 更新当前用户的安全设置
      parameters:
      - description: 安全设置信息
        in: body
        name: security
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUserSecurityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserSecurity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 更新用户安全设置
      tags:
      - Account
  /api/v1/auth/settings:
    get:
      consumes:
      - application/json
      description: 获取当前用户的偏好设置
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserSettings'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 获取用户设置
      tags:
      - Account
    put:
      consumes:
      - application/json
      description: 更新当前用户的偏好设置
      parameters:
      - description: 用户设置信息
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUserSettingsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserSettings'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 更新用户设置
      tags:
      - Account
  /api/v1/buyer/account-settings:
    get:
      consumes:
      - application/json
      description: 获取买家的专用账户设置信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserAccountResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 获取买家专用账户设置
      tags:
      - Buyer
    put:
      consumes:
      - application/json
      description: 更新买家的专用账户设置信息
      parameters:
      - description: 买家账户设置信息
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/model.UserAccountResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserAccountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 更新买家专用账户设置
      tags:
      - Buyer
  /api/v1/buyer/services/{service_id}/documentation:
    get:
      description: 获取指定API服务的文档
      parameters:
      - description: API服务ID
        in: path
        name: service_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.APIDocumentationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 获取API文档
      tags:
      - Seller
      - Buyer
  /api/v1/seller/account-settings:
    get:
      consumes:
      - application/json
      description: 获取卖家的专用账户设置信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserAccountResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 获取卖家专用账户设置
      tags:
      - Seller
    put:
      consumes:
      - application/json
      description: 更新卖家的专用账户设置信息
      parameters:
      - description: 卖家账户设置信息
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/model.UserAccountResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserAccountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 更新卖家专用账户设置
      tags:
      - Seller
  /api/v1/seller/documentation/endpoints/{endpoint_id}:
    delete:
      description: 删除指定的API端点文档
      parameters:
      - description: 端点ID
        in: path
        name: endpoint_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 删除API端点文档
      tags:
      - Seller
    put:
      consumes:
      - application/json
      description: 更新指定的API端点文档
      parameters:
      - description: 端点ID
        in: path
        name: endpoint_id
        required: true
        type: integer
      - description: 更新API端点请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateAPIEndpointRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.APIEndpoint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 更新API端点文档
      tags:
      - Seller
  /api/v1/seller/services:
    get:
      consumes:
      - application/json
      description: 获取当前认证卖家注册的所有 API 服务，包括服务状态和代理信息
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取 API 服务列表
          schema:
            items:
              $ref: '#/definitions/model.APIServiceResponse'
            type: array
        "401":
          description: 用户未认证或权限不足
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取卖家的 API 服务列表
      tags:
      - 卖家服务管理
    post:
      consumes:
      - application/json
      description: 卖家注册新的 API 服务，系统将生成代理前缀并加密存储原始 API 密钥
      parameters:
      - description: API 服务注册信息
        in: body
        name: api_service
        required: true
        schema:
          $ref: '#/definitions/model.RegisterAPIServiceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: API 服务注册成功
          schema:
            $ref: '#/definitions/model.APIServiceResponse'
        "400":
          description: 请求参数错误或 URL 格式不正确
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: 用户未认证或权限不足
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 注册新的 API 服务
      tags:
      - 卖家服务管理
  /api/v1/seller/services/{service_id}:
    delete:
      consumes:
      - application/json
      description: 卖家删除自己注册的 API 服务。注意：如果有买家正在使用该服务，则无法删除。
      parameters:
      - description: API 服务 ID (API Service ID)
        in: path
        name: service_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功 (Delete successful)
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: 请求参数错误 (Invalid input)
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: 未授权 (Unauthorized)
          schema:
            properties:
              error:
                type: string
            type: object
        "403":
          description: 禁止操作 (Forbidden - service has active subscriptions)
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: API 服务未找到 (API service not found)
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: 服务器内部错误 (Internal server error)
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 卖家删除 API 服务 (Seller deletes an API service)
      tags:
      - Seller
    put:
      consumes:
      - application/json
      description: 卖家更新自己注册的 API 服务信息。
      parameters:
      - description: API 服务 ID (API Service ID)
        in: path
        name: service_id
        required: true
        type: integer
      - description: 更新的 API 服务信息 (Updated API service information)
        in: body
        name: service
        required: true
        schema:
          properties:
            description:
              type: string
            is_active:
              type: boolean
            name:
              type: string
            original_api_key:
              type: string
            original_endpoint_url:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功 (Update successful)
          schema:
            properties:
              description:
                type: string
              is_active:
                type: boolean
              name:
                type: string
              platform_proxy_prefix:
                type: string
              service_id:
                type: integer
            type: object
        "400":
          description: 请求参数错误 (Invalid input)
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: 未授权 (Unauthorized)
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: API 服务未找到 (API service not found)
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: 服务器内部错误 (Internal server error)
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 卖家更新 API 服务 (Seller updates an API service)
      tags:
      - Seller
  /api/v1/seller/services/{service_id}/documentation:
    delete:
      description: 删除指定API服务的文档
      parameters:
      - description: API服务ID
        in: path
        name: service_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 删除API文档
      tags:
      - Seller
    get:
      description: 获取指定API服务的文档
      parameters:
      - description: API服务ID
        in: path
        name: service_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.APIDocumentationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 获取API文档
      tags:
      - Seller
      - Buyer
    post:
      consumes:
      - application/json
      description: 为指定的API服务创建文档
      parameters:
      - description: API服务ID
        in: path
        name: service_id
        required: true
        type: integer
      - description: 创建API文档请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateAPIDocumentationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.APIDocumentation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 创建API文档
      tags:
      - Seller
    put:
      consumes:
      - application/json
      description: 更新指定API服务的文档
      parameters:
      - description: API服务ID
        in: path
        name: service_id
        required: true
        type: integer
      - description: 更新API文档请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateAPIDocumentationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.APIDocumentation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 更新API文档
      tags:
      - Seller
  /api/v1/seller/services/{service_id}/documentation/endpoints:
    post:
      consumes:
      - application/json
      description: 为指定的API文档创建端点文档
      parameters:
      - description: API服务ID
        in: path
        name: service_id
        required: true
        type: integer
      - description: 创建API端点请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateAPIEndpointRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.APIEndpoint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 创建API端点文档
      tags:
      - Seller
  /api/v1/seller/services/{service_id}/pricing:
    put:
      consumes:
      - application/json
      description: 卖家更新自己注册的 API 服务的定价模式和价格
      parameters:
      - description: API 服务 ID (API Service ID)
        in: path
        name: service_id
        required: true
        type: integer
      - description: 定价更新请求 (Pricing update request)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateAPIPricingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功 (Update successful)
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: 请求参数错误 (Invalid input)
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: 未授权 (Unauthorized)
          schema:
            properties:
              error:
                type: string
            type: object
        "403":
          description: 禁止操作 (Forbidden)
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: API 服务未找到 (API service not found)
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: 服务器内部错误 (Internal server error)
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 卖家更新 API 定价设置 (Seller updates API pricing settings)
      tags:
      - Seller
  /api/v1/seller/usage:
    get:
      consumes:
      - application/json
      description: Get usage statistics for seller's API services
      parameters:
      - default: '"daily"'
        description: Time period (daily, weekly, monthly)
        in: query
        name: period
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UsageSummaryResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get seller usage statistics
      tags:
      - Seller
  /auth/login:
    post:
      consumes:
      - application/json
      description: 使用用户名和密码登录，成功返回 JWT 认证令牌
      parameters:
      - description: 登录凭证
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功，返回 JWT 令牌
          schema:
            $ref: '#/definitions/model.UserLoginResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 用户登录
      tags:
      - 用户认证
  /auth/register:
    post:
      consumes:
      - application/json
      description: 注册新的卖家或买家账户，支持角色选择
      parameters:
      - description: 用户注册信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 用户创建成功
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: 请求参数错误或用户名/邮箱已存在
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 用户注册
      tags:
      - 用户认证
  /buyer/services:
    get:
      consumes:
      - application/json
      description: 列出平台上所有卖家注册并激活的 API 服务，供买家浏览。
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取可用 API 列表 (Successfully retrieved available API list)
          schema:
            items:
              properties:
                description:
                  type: string
                name:
                  type: string
                seller_username:
                  type: string
                service_id:
                  type: integer
              type: object
            type: array
        "401":
          description: 未授权 (Unauthorized)
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: 服务器内部错误 (Internal server error)
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 获取平台可用的 API 服务列表
      tags:
      - Buyer
  /buyer/services/{service_id}:
    get:
      consumes:
      - application/json
      description: 获取指定 API 服务的详细信息，包括文档、订阅状态等
      parameters:
      - description: API 服务 ID (API Service ID)
        in: path
        name: service_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: API 详情信息
          schema:
            $ref: '#/definitions/model.APIServiceDetailResponse'
        "400":
          description: 请求参数错误 (Invalid input)
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: 未授权 (Unauthorized)
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: API 服务不存在 (API service not found)
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: 服务器内部错误 (Internal server error)
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 获取 API 服务详细信息
      tags:
      - Buyer
  /buyer/services/{service_id}/subscribe:
    post:
      consumes:
      - application/json
      description: 买家选择一个 API 服务进行订阅，平台将为此生成一个唯一的 API 密钥和代理 URL。
      parameters:
      - description: API 服务 ID (API Service ID)
        in: path
        name: service_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 订阅成功，返回平台密钥和代理 URL (Subscription successful, returns platform
            key and proxy URL)
          schema:
            properties:
              platform_api_key:
                type: string
              platform_proxy_url:
                type: string
            type: object
        "400":
          description: 请求参数错误 (Invalid input - e.g., service_id not found)
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: 未授权 (Unauthorized)
          schema:
            properties:
              error:
                type: string
            type: object
        "409":
          description: 已订阅该服务 (Already subscribed to this service)
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: 服务器内部错误 (Internal server error)
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 订阅 API 服务
      tags:
      - Buyer
  /buyer/subscriptions:
    get:
      consumes:
      - application/json
      description: 获取买家已订阅的API服务列表，包括订阅详情和API密钥信息。
      produces:
      - application/json
      responses:
        "200":
          description: 订阅列表 (Subscription list)
          schema:
            properties:
              apis:
                items:
                  type: object
                type: array
            type: object
        "401":
          description: 未授权 (Unauthorized)
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: 服务器内部错误 (Internal server error)
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 获取买家订阅列表
      tags:
      - Buyer
  /buyer/subscriptions/{service_id}:
    delete:
      consumes:
      - application/json
      description: 买家取消对指定 API 服务的订阅，删除相关的平台密钥。
      parameters:
      - description: API 服务 ID (API Service ID)
        in: path
        name: service_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 取消订阅成功 (Unsubscription successful)
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: 请求参数错误 (Invalid input - e.g., service_id not found)
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: 未授权 (Unauthorized)
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: 未找到订阅 (Subscription not found)
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: 服务器内部错误 (Internal server error)
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 取消订阅 API 服务
      tags:
      - Buyer
  /buyer/usage:
    get:
      consumes:
      - application/json
      description: 买家查看自己在特定时间段内的 API 调用次数和指示性费用。
      parameters:
      - description: '查询周期 (Query period) (e.g., ''monthly'', ''daily'') default:
          ''monthly'''
        in: query
        name: period
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取使用情况 (Successfully retrieved usage summary)
          schema:
            properties:
              calls_made:
                type: integer
              indicative_cost:
                type: number
              usage_details_by_api:
                type: array
            type: object
        "401":
          description: 未授权 (Unauthorized)
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: 服务器内部错误 (Internal server error)
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 查看 API 使用情况和费用
      tags:
      - Buyer
  /buyer/usage/timeseries:
    get:
      consumes:
      - application/json
      description: 获取买家的API使用时间序列统计数据，支持按日、周、月分组。
      parameters:
      - description: '查询周期 (Query period) (e.g., ''daily'', ''weekly'', ''monthly'')
          default: ''daily'''
        in: query
        name: period
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取时间序列数据 (Successfully retrieved time series data)
          schema:
            properties:
              data_points:
                type: array
              period:
                type: string
            type: object
        "401":
          description: 未授权 (Unauthorized)
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: 服务器内部错误 (Internal server error)
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 获取买家使用时间序列数据
      tags:
      - Buyer
  /health:
    get:
      consumes:
      - application/json
      description: 检查 API 平台服务是否正常运行
      produces:
      - application/json
      responses:
        "200":
          description: 服务正常运行
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 服务健康检查
      tags:
      - 健康检查
  /proxy/{proxiedPath}:
    post:
      consumes:
      - application/json
      description: Proxies an incoming API request to the registered seller's API
        service, handling authentication and usage tracking.
      parameters:
      - description: Platform API Key issued to the buyer
        in: header
        name: platform_api_key
        required: true
        type: string
      - description: Path to be proxied to the seller's service
        in: path
        name: proxiedPath
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Proxied response from seller's service
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request (e.g., missing or invalid platform API key)
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized (e.g., invalid or revoked platform API key)
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: Forbidden (e.g., API key not authorized for this service or
            quota exceeded)
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found (e.g., seller service endpoint not found)
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error (e.g., platform error or error from seller's
            service)
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "502":
          description: Bad Gateway (e.g., error connecting to seller's service)
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Proxy API request to seller's service
      tags:
      - Platform API Proxy
  /seller/usage/timeseries:
    get:
      consumes:
      - application/json
      description: 获取卖家的API使用时间序列统计数据，支持按日、周、月分组。
      parameters:
      - description: '查询周期 (Query period) (e.g., ''daily'', ''weekly'', ''monthly'')
          default: ''daily'''
        in: query
        name: period
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取时间序列数据 (Successfully retrieved time series data)
          schema:
            properties:
              data_points:
                type: array
              period:
                type: string
            type: object
        "401":
          description: 未授权 (Unauthorized)
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: 服务器内部错误 (Internal server error)
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 获取卖家使用时间序列数据
      tags:
      - Seller
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: JWT 认证令牌，格式：Bearer {token}
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: 系统健康状态检查相关接口
  name: 健康检查
- description: 用户注册、登录、认证相关接口
  name: 用户认证
- description: 卖家管理 API 服务的相关接口，包括创建、更新、删除、定价等
  name: 卖家服务管理
- description: 买家浏览、订阅、使用 API 服务的相关接口
  name: 买家服务访问
- description: API 请求代理和转发相关接口
  name: API 代理
- description: API 使用情况统计和查询相关接口
  name: 使用统计
- description: 用户账户信息管理相关接口
  name: 用户管理
